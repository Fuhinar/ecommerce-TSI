version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: postgres-db
    env_file: .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend_net
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-app
    env_file: .env
    networks:
      - backend_net
    volumes:
      - media_volume:/backend/media
      - static_volume:/backend/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-app
    env_file: .env
    networks:
      - backend_net
    volumes:
      - media_volume:/usr/share/nginx/html/media
    depends_on:
      - backend
    restart: unless-stopped

  nginx:
    image: nginx:1.23-alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf 
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

networks:
  backend_net:

volumes:
  postgres_data:
  static_volume:
  media_volume:
