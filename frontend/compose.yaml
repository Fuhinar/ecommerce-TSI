version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: postgres-db
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-app
    env_file:
      - ./backend/.env  # либо, если один .env для всего проекта, можно указать: - .env
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=${DB_PORT}
    ports:
      - "8000:8000"
    depends_on:
      - db
    volumes:
      - media_volume:/backend/media
    restart: unless-stopped

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: frontend-app
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - backend
  #   volumes:
  #     - media_volume:/usr/share/nginx/html/media  # Оставляем только для media, если необходимо
  #   restart: unless-stopped

  frontend:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    command: npm start


volumes:
  postgres_data:
  static_volume:
  media_volume:
